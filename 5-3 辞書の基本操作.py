# Your code here!

# 辞書の基本操作

enemies = {
    "ザコ":"スライム", 
    "中ボス":"ドラゴン",
    "ラスボス":"魔王"
    }

print(enemies)
print(enemies["ザコ"])
print(enemies["中ボス"])
# こんな感じで呼び出し方を復習してるよ
# ここまでは大丈夫？って聞かれてるけど鳥頭ではないから大丈夫だよ



# 辞書機能その１
# データの数を調べる
print(len(enemies))


# paiza見ずにやったけどやっぱりlistと操作は大差無い。
# 逆に言えばlen関数が特殊というか。リスト、辞書に対して
# 汎用的な関数だと理解してもいいかな？



#辞書の「追加」の方法
enemies["ザコ2"] = "メタルモンスター"
print(enemies)
print(len(enemies))


# 辞書の要素の追加はリストと同じなわけではなく。
# 辞書名[key] = "データの値"
# という書き方をする。
# keyを指定してデータを代入するってこっちゃな
# リストとは違うからな！覚えとけよ！


#辞書の「修正」の方法
enemies["中ボス"] = "レッドドラゴン"
print(enemies)
print(len(enemies))

# 辞書の修正のやり方は追加と同じ
# つまり、分かりやすい辞書を作っておかないと後々、追加したかったけど
# 修正しちゃって不具合でちゃった、テヘ☆
# みたいな事が起こりうるから本当に気を付けて。



#辞書から特定の値を削除する方法
del enemies["ザコ"]
print(enemies)
print(len(enemies))

# 汎用性の高い消し方それが
# del文
# 辞書の要素を削除するときは
# del リスト or 辞書名[index number or key name]
# って書き方になるよ
# del文はリスト・辞書、の値の削除
# オブジェクトの削除が出来る文になるよ



'''以下、公式チュートより。
5.2. del 文
リストから要素を削除する際
値を指定する代わりにインデックスを指定する方法があります。
それが del 文です。これは pop() メソッドと違い、値を返しません。
del 文はリストからスライスを除去したり、リスト全体を削除することもできます
(以前はスライスに空のリストを代入して行っていました)。
例えば以下のようにします:

a = [-1, 1, 66.25, 333, 333, 1234.5]
del a[0] #これはインデックスナンバーを指定して-1を消してる

a
[1, 66.25, 333, 333, 1234.5]
del a[2:5]
こっちはインデックスナンバー
2～「4」まで削除しますよーって文
「5」は消されねぇからな！気をつけろよ


a
[1, 66.25, 1234.5]
del a[:]
これは恐らく要素をすべて消す文、怖いよぉ・・・いつ使うんだよぉ・・・


a
[]
'''


#del は変数全体の削除にも使えます:
'''
del a
この文の後で名前 a を参照すると、(別の値を a に代入するまで)
エラーになります。
del の別の用途についてはまた後で取り上げます。
'''