# coding: utf-8
# 変数を使う
print("勇者は、荒野を歩いていた")
print("勇者は、モンスターと戦った")
print("勇者は、モンスターをたおした")
'''変数とはこんな感じで「勇者」の部分を
魔王にしたいけど全部直すは手間だろ？そこで使うのが
変数
例えば以下の様に'''
player = "勇者" #文字データを変数に指定したい場合は""で囲む
print(player + "は、荒野を歩いていた")
print(player + "は、モンスターと戦った")
print(player + "は、モンスターをたおした")
'''
とplayer = "勇者"と紐付けることを「変数」と呼ぶ
今はplayer = "勇者"と「勇者」を変数に登録したが
このことを変数に「代入する」と呼ぶ
代入した後は(player + "○○○○○○○○")とダブルクオーテーションの外に変数を書かないと
プログラムが走らない何故ならプリント内に居れたら文字と認識されて変数として認識されないから
変数はかなり楽が出来る
変数はどんな文字でもいい
なるべく分かりやすい変数名にした方が後々楽やで
'''

#変数のメリット
'''例えば変数 を
vertical = 5
horizontal = 2
と定義しよう。
そしたら
area = vertical + vertical * horixontal
と変数を使いまわせる、値を覚えてないが縦を式に入れたい・・・とか言う時にクッソ便利
変数使いこなすと値を覚えなくていい、つまり楽出来るって事や
'''

'''
Pythonで変数(ローカル変数)の名前は、次のルールに従って付けます。

・最初の1文字目：英文字または、「_」(アンダーバー)
・2文字目以降 ：英文字・数字「_」(アンダーバー)

変数名の例：
○	player 	1文字目が、英小文字
○	_weapon 	1文字目が、「_」(アンダーバー)
○	player01	2文字目以降に数字
○	redDragon	2文字目以降に英大文字

×	1player 1文字目に数字は使えない
×	class 重複

なお、「print」のように、Pythonで使われる関数名などは、
あらかじめ予約されている言葉なので変数名には利用できません。
'''


#文字データを格納した変数と文字列は、「+」記号で連結できます。

player = "戦士"
print(player + "は、荒野を歩いていた")


#!!!例えば変数 x があったとしよう!!!
x = 5 #と定義する
print(x) #これで出力されるのは5
#でも後であー、やっぱり x の値大きくしたい(更新したい)となったとするな、ほんだら以下の様に
x = x + 5 #ここでx + 5となったから出力されるのは10と変数 x の値を更新出来るんよ。
#このことを「変数を更新する」と呼ぶ

'''数値の入った変数を「更新する」場合は以下の様に省略して書くことが出来るお
    基本形                  省略形
    x = + 10     →          x += 10     足し算
    x = - 10     →          x -= 10     引き算
    x = * 10     →          x *= 10     掛け算
    x = / 10     →          x /= 10     割り算
    x = % 10     →          x %= 10     余り算



'''


