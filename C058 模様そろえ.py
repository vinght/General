'''
制限時間カウント
タイムアップ！
あなたの会社では、お菓子を工場で製造しており、N 角柱の箱に入れ販売しています。
箱の各側面には半角英字が 1 文字書かれており、これにより箱の向きが決まります。

例として、下図左に N = 5 の場合の箱を示しました。
側面には、それぞれ P, A, I, Z, A と順に書かれており、下図左はこの箱を横から見た図です。
便宜上、この向きの箱の側面を展開し、下図右のように表すものとします。

img

工場では、出荷前に箱の向きを一通りにそろえる必要があります。
そろえる向きは一通りに定められており、この向きにそろうように箱を右回りに回転させます。
向きをそろえる機械の特性上、右回りにしか回転させることができません。
あなたのタスクは、1 側面分の回転を 1 回として、箱の向きがそろう最小回転数を計算することです。

下図に入力例 1 のケースを示しました。
この場合、2 回転させると向きがそろうため、2 と出力してください。



評価ポイント
10回のテストケースで、正答率、実行速度、メモリ消費量をはかり得点が決まります。
より早い回答時間で提出したほうが得点が高くなります。
複数のテストケースで正しい出力がされるか評価（+50点）
解答までの速さ評価（+50点）
入力される値
入力は以下のフォーマットで与えられます。

N t s
・1 行目には箱の側面の数を表す N、そろえる向きを表す文字列 t、最初の箱の向きを表す文字列 s がこの順に半角スペース区切りで与えられます。
・入力は 1 行となり、末尾に改行が 1 つ入ります。

それぞれの値は文字列で標準入力から渡されます。標準入力からの値取得方法はこちらをご確認ください
期待する出力
箱の向きがそろう最小回転数を整数で出力してください。
末尾に改行を入れ、余計な文字、空行を含んではいけません。

条件
すべてのテストケースにおいて、以下の条件をみたします。

・1 ≦ N ≦ 100
・(t の長さ) = (s の長さ) = N
・t, s は半角英字で構成される文字列
・最大 N 回箱を回転させることで文字列 t から文字列 s を必ず作れる
入力例1
5 PAIZA ZAPAI
出力例1
2
入力例2
3 aaA aaA
出力例2
0
入力例3
4 abab baba
出力例3
1
'''
#回答一回目
input_lines = input().split()
correct = []
bad = []
#splitメゾットでリスト化された物を一文字ずつcorrectリストとbadリストに振り分けようした
for i in input_lines[1]:
    correct.append(i)
for j in input_lines[2]:
    bad.append(j)

#んで頭の文字が間違ってるか合ってるかを調べるプログラムが以下
for times in range(int(input_lines[0])):
    if correct[0] == bad[int(times)]:
        print(times)
        break
    elif correct[0] != bad[int(times)]:
        times - 1
# test 1 2 3以外通った。
# 恐らく文字列を回して正しく表示させるプログラムじゃなかったから通らなかった 





# なので文字自体を回して正しい表記にさせるプログラムを組みました
input_lines = input().split()
correct = []
bad = []
bad_1 =[]
cnt = int(input_lines[0])
for i in input_lines[1]:
    correct.append(i)
for j in input_lines[2]:
    bad.append(j)

for times in range(cnt):
    print(bad)
    print(bad_1)
    if correct == bad:
        print(times)
        break
    for k in range(cnt - 1):
        bad_1.append(bad[k + 1])
    bad_1.append(bad[0])
    bad = bad_1
    bad_1 = [] #一時的なリストだから毎回初期化しないとダメよん