# Your code here!

# 関数を作る
def say_hello():
    print("hello world")

# 今まで謎だったdef君の役割が分かった。なるほど
# 君はそのために居たんだね！
# def君は関数を定義する特別な存在だったんだ！
# そして字下げの位置がdefと同じになるまでが一つの関数になる
# if,else,else,for inあたりと同じと思えばいい。
# 因みに
# def
# とは 定義を意味する
# Definition の略

'''関数名ルール
関数の名前は、次のルールに従って付けます。
・1文字目：英語または、「_」(アンダーバー)
・2文字目以降：英語の大文字・小文字・数字「_」(アンダーバー)

例：
・ hello　 1文字目が、英小文字
・ _attack　 1文字目が、「_」(アンダーバー)
・ move01 2文字目以降に数字
・ move_left 2文字目以降「_」(アンダーバー)
・ moveLeft 2文字目以降に英大文字

慣習として、関数の先頭には大文字を使いません。
また、動詞を表す単語を使うと、コードがわかりやすくなります。
'''

#じゃあsay_hello()を呼び出すよ
say_hello()
say_hello()
'''
一度定義してしまえば再利用が可能、つまり楽が出来るよ！万々歳だね！
コードは上から順に読み込んでいくから定義したり空のリスト作ったり
したいときは上にズラーっと書くのが吉ですね。
今まではあらかじめ用意された関数しか使えなかったけど
自分で関数作れるようになっちゃった。
'''